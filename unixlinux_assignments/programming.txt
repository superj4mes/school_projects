Jesse Str√∂mberg
https://github.com/hamk-linux-20m6/jessestromberg_assignments

Which programming tools you liked the best?
In this course I loved so many parts of programming and tools it covered. So many convenient little script making life easier, git (already using), web-development tools, web-mode for example, not to mention all other autocomplete etc.. I really love automation so scripts and all the tools for making it possible are always welcome! This makefile really amazed and me somehow you Petri, lured me to like C when demonstrating use of makefile to be so simple. Emacs REALLY stunned me. My understanding how powerful one editor can be took totally new curve. Dired mode, extensions, customization and all that it has to offer made me really love it and it is time to say bye Vim cause of this. Lastly not but least Ubuntu. This course made me wake up and wonder why I'm still stuck in era of Microsoft when I have all these tools Linux has to offer. I can even boost my Windows experience with chokolatey, windows terminal etc. So big thanks goes to you Petri!

Which programming tools you plan to use in future?
All these mentioned above I will and try use as much as I can to learn even more. I had some struggle with some of tools but every day is a new day for me to improve my skills and knowledge with these amazing programming tools. 

Describe optimal use for Bash scripts
Bash is a command processor, therefore used for small simple programs and repetitive tasks and especially important for every Linux user. Bash scripts can be used for many purposes, such as executing a shell command, running multiple commands together, customizing admistration tasks and pretty much making any sort of automation. I would say it is really good tool for adminstrative use.

Describe optimal use for Python scripts
Python is general-purpose coding language. Compared to other languages like JavaScript for example it can be used for other types of programming and software developing including back end, data science, scripts, you name it. When it comes to scripting Python is far more simplier looking pseudo-style language that does some parts better in scripting than Bash and one pretty big advantage over Bash for example is Python's huge standard library. Python has fewer keywords and more English language type syntax so it is much more simplier and faster to write than C for example. Its not as complex as C but can do so many things really efficient, although it lacks some speed, but you definitely can't call it slow... Still many web-development applications, CAD apps, Desktop UI and many more are using it.

Describe optimal use for C programming language
C is sort of base for the programming. C is also a general-purpose programming language that is very popular. It is simple, fast and structured programming language that is machine-independant and used to write various applications, OS and many pretty complex stuff like database systems, compilers and assemblers, network drivers and Python interpreter for example. So when you are rooting for Python guess you can also root for C. It is really great especially for creating small executables with no runtime libraries required. C has ability to access memory locations and many C compilers allows to embbed assembler code when needed to lower level access for example writing device driver etc. Some problems with C is that standard library is limited and some functions work poorly and sometimes you happen to create some huge memory allocation problem and program starts to eat memory. Compare to Python that has good memory management and great standard library. Object orienation part is also missing, but it is covered in more "advanced" version C++ which is part of C family. Never the less very powerful language.

Why makefiles are needed?
Makefiles are special format files that help to build and manage programs automatically. It can make the compilation procedure much faster. Compilation is done using a single command, only the files that must be compiled are going to get compiled and this allows managing more complex programs lot more easier. Although makefiles is not absolute necessity, it still makes life lot more easier.
