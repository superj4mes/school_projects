Text editors (Vim, Emacs, Nano)
https://github.com/hamk-linux-20m6/jessestromberg_assignments/
Jesse Strömberg

LEARNING CURVE
If we try to find the easiest editor to master, it is probably Nano. It is so simple and easily compared to Windows notepad(but it still has more to offer!). All important shortcuts are put down bar and you can use those like cheat sheet. I am thinking Nano for being relatively user-friendly choice for a beginner like me. It is enough instructive for example let us say you are quitting your edit and for some reason you do not even consider saving your creation while in rush, well nano advices you to do this and so on... There is no endless choice of options considering all cut, copy, paste etc., but it is enough to give you decent terminal editing software and make some lightweight editing as regular Windows user would do as using notepad. I heavily compare Nano to notepad and that is why I feel learning Nano is super easy. When we come to more advanced and feature-rich editor like VIM learning part differs hugely and feels superior compared to Nano. When you open a text file using VIM your first thought would be like wth where have all the buttons and handles gone? Like there is no way or any place to grab on to. It takes huge amount of time for a beginner to learn all the shortcuts and it really pushes you to google stuff. My first reaction after opening VIM was like how I get out of here, please open the door! After endless hours of smashing the keyboard, hitting hundreds of combos you might think would get you out this mess, youfinally get your way out and start learning. I have still read many people saying that VIM is hard to learn but even harder to master and for me it feels that way. Finally, we come to Emacs. My first thoughtwas like it feels more user-friendly than VIM based on my first expressions similar to Nano. By pressing F10 there is a whole new world and options to choose from. Guidance is what we need when learning new editors. I want to also make a note here that Emacs documentation is super good. It took me over 2 hours to read it through but realizing how diverse this editor can be just made me want to learn more. After spending that 2 hours reading it really helped to realize several pretty important facts and what comes to using Emacs and of course that important guidance under F10 is what I say OP. What comes to basic stufflike opening file, making few changes and quitting is easy enough for all of these editors. Still VIM offering more advanced features and Emacs even more making them hard to learn but not impossible if you just give these sweet editor some time. 

USER INTERFACE
Nano has the most user-friendly interface. Title of your text appears at the top and the text contained within the file appears in the middle. All the actions you can perform line at the bottom. Completing all the actions requires user to press ctrl or ^ + command key that is being instructed at the bottom. All bottom-line functions are enough to carry you over a day of editing configuration files for example. Based on what I knew pressing alt is usually some feature key so figured out this ^ quite quickly. Pressing get help will tell you rest your need to know. There is not much to say when using Nano because it is pretty straight-forward editor. Using Vim later was way quite easy, but on the other hand felt really hard at the beginning. I had to use cheat sheet all the time. Friendly user interface was far from good and actually felt really horrible at the beginning. Using help and google was only way to the rescue. Still basic stuff is easy to remember like ! is for really meaning to do something like quit editor even if it tells you not to. Also that saving part :w and combined with word q for quitting that is obvious and helps you to remember. Vim also involves modes like visual where you can easily manipulate chunks of text or basic insert mode to start editing. One thing to mention is that shortcuts are quite nicely put out there considering keyboard layout and especially for me really easy to execute, this is thing you should consider when using editor like Vim. Once you have learned Vim’s behavior, there is a certain beauty to this editors’ minimal aesthetics. You do not have anything unnormal floating inside your terminal window. All you see is pure text. After using it some time you realize it is a decent enough editor to use and only involves memorizing commands and keeping focus in which mode you are in. Emacs serves user also very friendly experience. Windows look-a-like tool bar that has named tabs, middle buffer part containing text and bottom it, mode line with description for the most bottom part called mini buffer which purpose is allowing user to interact with Emacs. Like Windows user knows the term window and file open, Emacs gives you another idea of frames and buffers where your files are edited. All help documentation and F10 are by far the most advanced thing what comes using Emacs. Also, you can check some of the basic shortcuts using F10 which gave me really nice first expression. When using Emacs you realize there are so much more to do than just basic file editing so what comes over that I definitely need more time with this editor. Also good thing to point out that learning 3 different editors same time when you only have several weeks to do it messes up an idea of what is the easiest to use. There are many moments when you easily forget what mode and what editor you are using. For this I really loved Emacs cancel that helps you get out of many unpleasant situations.

FEATURES
Nano has not that many features, but all necessary ones are included: autoconf support, search and replace, autoindent ability, displayed tab width option, color coding etc. So, what comes to basic html filesediting it does the job. I have not much to say about Nano since it is acting such a minor part in my heart at least. Vim on the other hand is what I’ve used the most but I still had some hard time doing moreserious editing even though it performed super smoothly. Vim has functions like automatic commands, completion, higher memory limits, split screen, session recovery, tab extension, tag system and syntax coloring even more advanced than Nano has… I don’t even need to mention that Vim has any function you could imagine, yank, paste, etc. What comes to these features and this project I really loved split and tab functionality. I had to choose just use one of those because huge amount of Vim shortcuts were too huge chunk for me to chew. When using splits, jumping from windows to another yanking this and copying that it may get confusing and some way even frustrating if you do not use cheat sheet at a start at least. Also learning to use all modes was bit confusing and even now I get mixed up with some commands like should I do these in insert, visual or just press escape and try it there. There are tons of different kind of shortcuts jumping back and forth in lines. Vim is really feature-rich when it comes to “is there are key for this” moment. There are also pretty neat stuff like suspend and resume that might come handy for leaving to resize image for you web page or whatever other thing comes to your mind or terminal command to split screen to do some terminal tasks. Vim offers expansions and scripts you can make Vim even more your choice of editor. At first I didn’t think that much of a Emacs and just thinking its too big of an editor for me and has some weird functions I would never ever use.. After getting use to several new functions such as calendars, CLI, tetris and especially dired mode that like really blew out my mind I am considering it to be more than just an editor and more like operating system. Vim you start many times a day but with Emacs it feels like you run your shell through it and never closing it. I did some python developing besides this project and this felt really superior that I didn’t need to quit emacs to do that. You of course have all same functions as Vim and even more. Split, copy, paste, suspend many are just basic stuff for Emacs. Using commands at beginning was hard but after using nice cheat sheets I started learning it really fast. What comes to basics Emacs has this functionality to save another version of a fileso you might consider it as a light-weight version of a version control. Emacs has also many extensions for example git extension which is a big plus. Different kinds of buffer modes server different purposesfor example text and python mode. I somehow got even html template out of Emacs. Emacs is even more advanced than Vim based on many features like copying commands. What really felt like opening another dimension was dired-mode. It is an easy way to get to your file structure to copy, rename, delete, change owners, chmod, query and replace or even do that to multiple files or folders same time. Moving in file structure is simple, fast and you can easily mark your targets to execute these functions. Emacs have some seriously cool major modes like webmode that gives templates helps editing and company mode that is text completion framework and both serve programming purposes. Emacs is so huge that if I continue writing what I have discovered, HAMK cloud is going to explode after saving such a gigantic file. 

SPEED
All editors are fast enough to open. Vim might be even faster than Nano and Emacs, but you can start up Emacs in quick mode that evens up the setup. For me there is not a big difference when firing up these editors. What really makes me consider is the speed of using an editor. Nano does not provide many shortcuts so if you are swimming through endless ocean of text it is really not a good option. It is good for basic configuration in my opinion and as I already mentioned it is terminal editor or what ever you want to call it even if it has search or other functionality. Vim has to offer all nice and smooth start/endof line, jump to word easy search you name it.. It is also so good for my hands at least so pressing these combos fast is easy. Only problem is that do I remember all this stuff. Maybe in future I can handle it even faster. Also, what makes it fast is good support for color syntax and autocomplete when coding. This exercise was not enough to see what power Vim has really to offer but I am learning more every day and will keep on doing it. In my opinion Emacs needs harder to press combos but same time easier to learn at least for me making speed of use really good. It also has same stuff as Vim so speed is concept of every users opinion which one is really better because at the we are all individuals.

PROBLEMS/ISSUES WITH EDITOR
I have had many problems when using Windows editors but using these Unix focused editors really did not give me any bad shouts to put out there. All are fast enough and can handle basic editing. If you want to do multitasking you go for Vim or Emacs. Something you can not do with Nano. I bumped into few strange occurancies for example Vim getting stuck while searching and no key combo got me out of it. One time using terminal everything started to flicker so I needed to reopen Windows Terminal window. This might have something to do with Windows Terminal what I was mainly using. I needed to use putty, because I also had some trouble with ctrl+space combos with Emacs. Nothing really happened when using Nano, buy hey there are seriously not that much to happen when using it. One more problem I suddenly realized while writing this review, Nano makes this text edited by different editor to be read on one line that continues after scrolling to right direction. Vim makes few weird spaces on left while Emacs feels to give the most reasonable outcome, although still splitting words while its trying to maintain all text on the screen and I am not 100% sure do I like weird looking slashes end of line..

IDEAL USE OF EDITOR
Nano is definitely editor of choice for casual user for command-line or simple editing when making few small file changes. If you need more than that Vim and Emacs are there to give more perspective. Vim is propably a good way to go because it is and will be always available I do not mean Emacs is going anywhere but Vim is included in many distributions. Vim is also well-documented as Emacs. Both are also extremely customizable and have huge bunch of extensions and scripts to ease your use. Vim offer simpler looking UI and Emacs on the other hand looking more complex but still advices user a lot. If Vim is hard to learn there comes a day you think you can master it but with Emacs that day never come so if you are adventurous enough you can stick with Emacs rather than Vim. If you only poke a config file occasionally, then it is probably not worth learning Vim or Emacs. Otherwise Vim and Emacs both serve as command-line, simple or even more advanced editing and if we want to go even further and have like extra operating system running you go for Emacs in my humble opinion.

PICK THE WINNER
Nano is like I already mentioned the most easiest to use and you consider it as Notepadish creation. It really doesn’t give me the vibe start using it more heavy-oriented editing. I will keep on using it for small tasks. Vim was my original favorite but after realizing how much more Emacs has to offer I changed ships. Emacs has super powerful stuff in it and using shell or eshell made realize I want to study it more. After trying some gaming like chess or tetris and what ever fun activity you can do with it I started using it as multifunctional app on my other screen that serves huge purpose on my every day life now on. Emacs is therefore clear winner for this struggle! 
